<?php

/**
 * BasePlant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $seed_price
 * @property float $price
 * @property integer $fertilizer_mass
 * @property integer $seeding_rate
 * @property integer $growing_rate
 * @property integer $fuel
 * @property integer $man_hours
 * @property integer $fertilizer_id
 * @property Fertilizer $Fertilizer
 * @property Doctrine_Collection $Prevs
 * @property Doctrine_Collection $Nexts
 * @property PlantRelation $PrevPR
 * @property PlantRelation $NextPR
 * @property Doctrine_Collection $Field
 * 
 * @method string              getName()            Returns the current record's "name" value
 * @method integer             getSeedPrice()       Returns the current record's "seed_price" value
 * @method float               getPrice()           Returns the current record's "price" value
 * @method integer             getFertilizerMass()  Returns the current record's "fertilizer_mass" value
 * @method integer             getSeedingRate()     Returns the current record's "seeding_rate" value
 * @method integer             getGrowingRate()     Returns the current record's "growing_rate" value
 * @method integer             getFuel()            Returns the current record's "fuel" value
 * @method integer             getManHours()        Returns the current record's "man_hours" value
 * @method integer             getFertilizerId()    Returns the current record's "fertilizer_id" value
 * @method Fertilizer          getFertilizer()      Returns the current record's "Fertilizer" value
 * @method Doctrine_Collection getPrevs()           Returns the current record's "Prevs" collection
 * @method Doctrine_Collection getNexts()           Returns the current record's "Nexts" collection
 * @method PlantRelation       getPrevPR()          Returns the current record's "PrevPR" value
 * @method PlantRelation       getNextPR()          Returns the current record's "NextPR" value
 * @method Doctrine_Collection getField()           Returns the current record's "Field" collection
 * @method Plant               setName()            Sets the current record's "name" value
 * @method Plant               setSeedPrice()       Sets the current record's "seed_price" value
 * @method Plant               setPrice()           Sets the current record's "price" value
 * @method Plant               setFertilizerMass()  Sets the current record's "fertilizer_mass" value
 * @method Plant               setSeedingRate()     Sets the current record's "seeding_rate" value
 * @method Plant               setGrowingRate()     Sets the current record's "growing_rate" value
 * @method Plant               setFuel()            Sets the current record's "fuel" value
 * @method Plant               setManHours()        Sets the current record's "man_hours" value
 * @method Plant               setFertilizerId()    Sets the current record's "fertilizer_id" value
 * @method Plant               setFertilizer()      Sets the current record's "Fertilizer" value
 * @method Plant               setPrevs()           Sets the current record's "Prevs" collection
 * @method Plant               setNexts()           Sets the current record's "Nexts" collection
 * @method Plant               setPrevPR()          Sets the current record's "PrevPR" value
 * @method Plant               setNextPR()          Sets the current record's "NextPR" value
 * @method Plant               setField()           Sets the current record's "Field" collection
 * 
 * @package    marina
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('plant');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('seed_price', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('price', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('fertilizer_mass', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('seeding_rate', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('growing_rate', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fuel', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('man_hours', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('fertilizer_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Fertilizer', array(
             'local' => 'fertilizer_id',
             'foreign' => 'id'));

        $this->hasMany('Plant as Prevs', array(
             'refClass' => 'PlantRelation',
             'local' => 'next_plant_id',
             'foreign' => 'prev_plant_id'));

        $this->hasMany('Plant as Nexts', array(
             'refClass' => 'PlantRelation',
             'local' => 'prev_plant_id',
             'foreign' => 'next_plant_id'));

        $this->hasOne('PlantRelation as PrevPR', array(
             'local' => 'id',
             'foreign' => 'next_plant_id'));

        $this->hasOne('PlantRelation as NextPR', array(
             'local' => 'id',
             'foreign' => 'prev_plant_id'));

        $this->hasMany('Field', array(
             'local' => 'id',
             'foreign' => 'prev_plant_id'));
    }
}